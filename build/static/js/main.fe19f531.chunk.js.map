{"version":3,"sources":["serviceWorker.js","Login/styles.js","Login/login.js","Signup/styles.js","Signup/signup.js","NewChat/styles.js","NewChat/newChat.js","ChatList/styles.js","ChatList/chatList.js","ChatView/styles.js","ChatView/chatView.js","ChatTextBox/styles.js","ChatTextBox/chatTextBox.js","Dashboard/styles.js","Dashboard/dashboard.js","index.js"],"names":["Boolean","window","location","hostname","match","styles","theme","main","Object","defineProperty","width","display","marginLeft","spacing","unit","marginRight","breakpoints","up","paper","marginTop","flexDirection","alignItems","padding","concat","form","submit","noAccountHeader","signUpLink","textDecoration","color","fontWeight","errorText","textAlign","firebase","require","LoginComponent","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","userTyping","whichInput","event","setState","email","target","value","password","submitLogin","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","e","wrap","_context","prev","next","preventDefault","auth","signInWithEmailAndPassword","state","then","props","history","push","err","serverError","console","log","stop","_x","apply","arguments","_this2","classes","react_default","createElement","className","CssBaseline_default","Paper_default","Typography_default","component","variant","onSubmit","FormControl_default","required","fullWidth","margin","InputLabel_default","htmlFor","Input_default","autoComplete","autoFocus","onChange","id","type","Button_default","react_router_dom","to","React","Component","withStyles","hasAccountHeader","logInLink","SignupComponent","passwordConfirmation","formIsValid","submitSignup","createUserWithEmailAndPassword","authRes","userObj","user","friends","messages","firestore","collection","doc","set","dbErr","signupError","authErr","position","top","left","input","NewChatComponent","inputType","username","message","submitNewChat","userExists","sent","chatExists","goToChat","createChat","buildDocKey","currentUser","sort","join","newChatSubmitFn","sendTo","goToChatFn","_callee2","docKey","chat","_context2","get","exists","abrupt","_callee3","usersSnapshot","_context3","docs","map","_doc","data","includes","index_es","root","backgroundColor","palette","background","height","boxShadow","listItem","cursor","newChatBtn","borderRadius","unreadMessage","right","ChatListComponent","userIsSender","length","sender","userEmail","newChat","newChatBtnFn","selectChat","index","selectChatFn","chats","onClick","List_default","_chat","_index","key","ListItem_default","selected","selectedChatIndex","ListItemAvatar_default","Avatar_default","alt","users","filter","_user","split","ListItemText_default","primary","secondary","Fragment","substring","receiverHasRead","ListItemIcon_default","NotificationImportant_default","Divider_default","content","overflow","boxSizing","overflowY","userSent","float","clear","wordWrap","friendSent","chatHeader","fontSize","paddingTop","ChatViewComponent","componentDidMount","container","document","getElementById","scrollTo","scrollHeight","componentDidUpdate","undefined","_usr","_msg","sendBtn","&:hover","chatTextBoxContainer","bottom","chatTextBox","ChatTextBoxComponent","keyCode","submitMessage","chatText","messageValid","txt","replace","userClickedInput","userClickedInputFn","submitMessageFn","TextField_default","placeholder","onKeyUp","onFocus","Send_default","signOutBtn","DashboardComponent","signOut","msg","selectedChat","update","FieldValue","arrayUnion","timestamp","Date","now","friend","newChatBtnClicked","newChatFormVisible","newChatSubmit","chatObj","_ref2","chatIndex","messageRead","_x2","_ref3","usersInChat","find","every","indexOf","_x3","_x4","clickedMessageWhereNotSender","componentWillMount","onAuthStateChanged","_ref4","_callee5","_context5","where","onSnapshot","_ref5","_callee4","res","_context4","_x6","_x5","chatList","chatView","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","routing","react_router","path","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.fe19f531.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const styles = theme => ({\r\n  main: {\r\n    width: 'auto',\r\n    display: 'block', // Fix IE 11 issue.\r\n    marginLeft: theme.spacing.unit * 3,\r\n    marginRight: theme.spacing.unit * 3,\r\n    [theme.breakpoints.up(400 + theme.spacing.unit * 3 * 2)]: {\r\n      width: 400,\r\n      marginLeft: 'auto',\r\n      marginRight: 'auto',\r\n    },\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing.unit * 8,\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    padding: `${theme.spacing.unit * 2}px ${theme.spacing.unit * 3}px ${theme.spacing.unit * 3}px`,\r\n  },\r\n  form: {\r\n    width: '100%',\r\n    marginTop: theme.spacing.unit,\r\n  },\r\n  submit: {\r\n    marginTop: theme.spacing.unit * 3,\r\n  },\r\n  noAccountHeader: {\r\n    width: '100%'\r\n  },\r\n  signUpLink: {\r\n    width: '100%',\r\n    textDecoration: 'none',\r\n    color: '#303f9f',\r\n    fontWeight: 'bolder'\r\n  },\r\n  errorText: {\r\n    color: 'red',\r\n    textAlign: 'center'\r\n  }\r\n});\r\n\r\nexport default styles;","import { Link } from 'react-router-dom';\r\nimport React from 'react';\r\nimport styles from './styles';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Input from '@material-ui/core/Input';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst firebase = require(\"firebase\");\r\n\r\nclass LoginComponent extends React.Component {\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      email: null,\r\n      password: null,\r\n      serverError: false\r\n    };\r\n  }\r\n\r\n  render() {\r\n\r\n    const { classes } = this.props;\r\n\r\n    return (\r\n      <main className={classes.main}>\r\n        <CssBaseline/>\r\n        <Paper className={classes.paper}>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Log In!\r\n          </Typography>\r\n          <form onSubmit={(e) => this.submitLogin(e)} className={classes.form}>\r\n            <FormControl required fullWidth margin='normal'>\r\n              <InputLabel htmlFor='login-email-input'>Enter Your Email</InputLabel>\r\n              <Input autoComplete='email' autoFocus onChange={(e) => this.userTyping('email', e)} id='login-email-input'></Input>\r\n            </FormControl>\r\n            <FormControl required fullWidth margin='normal'>\r\n              <InputLabel htmlFor='login-password-input'>Enter Your Password</InputLabel>\r\n              <Input autoComplete=\"current-password\" type=\"password\" onChange={(e) => this.userTyping('password', e)} id='login-password-input'></Input>\r\n            </FormControl>\r\n            <Button type='submit' fullWidth variant='contained' color='primary' className={classes.submit}>Log In</Button>\r\n          </form>\r\n          { this.state.serverError ? \r\n            <Typography className={classes.errorText} component='h5' variant='h6'>\r\n              Incorrect Login Information\r\n            </Typography> :\r\n            null\r\n          }\r\n          <h5 className={classes.noAccountHeader}>Don't Have An Account?</h5>\r\n          <Link className={classes.signUpLink} to='/signup'>Sign Up!</Link>\r\n        </Paper>\r\n      </main>\r\n    );\r\n  }\r\n\r\n  userTyping = (whichInput, event) => {\r\n    switch (whichInput) {\r\n      case 'email':\r\n        this.setState({ email: event.target.value });\r\n        break;\r\n\r\n      case 'password':\r\n        this.setState({ password: event.target.value });\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  submitLogin = async (e) => {\r\n    e.preventDefault(); // This is to prevent the automatic refreshing of the page on submit.\r\n\r\n    await firebase\r\n      .auth()\r\n      .signInWithEmailAndPassword(this.state.email, this.state.password)\r\n      .then(() => {\r\n        this.props.history.push('/dashboard');\r\n      }, err => {\r\n        this.setState({ serverError: true });\r\n        console.log('Error logging in: ', err);\r\n      });\r\n  };\r\n\r\n}\r\n\r\nexport default withStyles(styles)(LoginComponent);","const styles = theme => ({\r\n  main: {\r\n    width: 'auto',\r\n    display: 'block', // Fix IE 11 issue.\r\n    marginLeft: theme.spacing.unit * 3,\r\n    marginRight: theme.spacing.unit * 3,\r\n    [theme.breakpoints.up(400 + theme.spacing.unit * 3 * 2)]: {\r\n      width: 400,\r\n      marginLeft: 'auto',\r\n      marginRight: 'auto',\r\n    },\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing.unit * 8,\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    padding: `${theme.spacing.unit * 2}px ${theme.spacing.unit * 3}px ${theme.spacing.unit * 3}px`,\r\n  },\r\n  form: {\r\n    width: '100%',\r\n    marginTop: theme.spacing.unit,\r\n  },\r\n  submit: {\r\n    marginTop: theme.spacing.unit * 3,\r\n  },\r\n  hasAccountHeader: {\r\n    width: '100%'\r\n  },\r\n  logInLink: {\r\n    width: '100%',\r\n    textDecoration: 'none',\r\n    color: '#303f9f',\r\n    fontWeight: 'bolder'\r\n  },\r\n  errorText: {\r\n    color: 'red',\r\n    textAlign: 'center'\r\n  }\r\n});\r\n\r\nexport default styles;","import { Link } from 'react-router-dom';\r\nimport React from 'react';\r\nimport styles from './styles';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Input from '@material-ui/core/Input';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nconst firebase = require(\"firebase\");\r\n\r\nclass SignupComponent extends React.Component {\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      email: null,\r\n      password: null,\r\n      passwordConfirmation: null,\r\n      signupError: ''\r\n    };\r\n  }\r\n\r\n  render() {\r\n\r\n    const { classes } = this.props;\r\n\r\n    return (\r\n      <main className={classes.main}>\r\n        <CssBaseline/>\r\n        <Paper className={classes.paper}>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Sign Up!\r\n          </Typography>\r\n          <form onSubmit={(e) => this.submitSignup(e)} className={classes.form}>\r\n            <FormControl required fullWidth margin='normal'>\r\n              <InputLabel htmlFor='signup-email-input'>Enter Your Email</InputLabel>\r\n              <Input autoComplete='email' autoFocus onChange={(e) => this.userTyping('email', e)} id='signup-email-input'></Input>\r\n            </FormControl>\r\n            <FormControl required fullWidth margin='normal'>\r\n              <InputLabel htmlFor='signup-password-input'>Create A Password</InputLabel>\r\n              <Input type=\"password\" onChange={(e) => this.userTyping('password', e)} id='signup-password-input'></Input>\r\n            </FormControl>\r\n            <FormControl required fullWidth margin='normal'>\r\n              <InputLabel htmlFor='signup-password-confirmation-input'>Confirm Your Password</InputLabel>\r\n              <Input type=\"password\" onChange={(e) => this.userTyping('passwordConfirmation', e)} id='signup-password-confirmation-input'></Input>\r\n            </FormControl>\r\n            <Button type='submit' fullWidth variant='contained' color='primary' className={classes.submit}>Submit</Button>\r\n          </form>\r\n          { \r\n            this.state.signupError ? \r\n            <Typography className={classes.errorText} component='h5' variant='h6'>\r\n              {this.state.signupError}\r\n            </Typography> :\r\n            null\r\n          }\r\n          <h5 className={classes.hasAccountHeader}>Already Have An Account?</h5>\r\n          <Link className={classes.logInLink} to='/login'>Log In!</Link>\r\n        </Paper>\r\n      </main>\r\n    );\r\n  }\r\n\r\n  userTyping = (whichInput, event) => {\r\n    switch (whichInput) {\r\n      case 'email':\r\n        this.setState({ email: event.target.value });\r\n        break;\r\n\r\n      case 'password':\r\n        this.setState({ password: event.target.value });\r\n        break;\r\n\r\n      case 'passwordConfirmation':\r\n        this.setState({ passwordConfirmation: event.target.value });\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  formIsValid = () => this.state.password === this.state.passwordConfirmation;\r\n\r\n  submitSignup = (e) => {\r\n    e.preventDefault(); // This is to prevent the automatic refreshing of the page on submit.\r\n\r\n    if(!this.formIsValid()) {\r\n      this.setState({ signupError: 'Passwords do not match' });\r\n      return;\r\n    }\r\n\r\n    firebase\r\n      .auth()\r\n      .createUserWithEmailAndPassword(this.state.email, this.state.password)\r\n      .then(authRes => {\r\n        const userObj = {\r\n          email: authRes.user.email,\r\n          friends: [],\r\n          messages: []\r\n        };\r\n        firebase\r\n          .firestore()\r\n          .collection('users')\r\n          .doc(this.state.email)\r\n          .set(userObj)\r\n          .then(() => {\r\n            this.props.history.push('/dashboard');\r\n        }, dbErr => {\r\n          console.log('Failed to add user to the database: ', dbErr);\r\n          this.setState({ signupError: 'Failed to add user' });\r\n        });\r\n    }, authErr => {\r\n      console.log('Failed to create user: ', authErr);\r\n      this.setState({ signupError: 'Failed to add user' });\r\n    });\r\n  };\r\n}\r\n\r\nexport default withStyles(styles)(SignupComponent);","const styles = theme => ({\r\n  main: {\r\n    width: 'auto',\r\n    display: 'block', // Fix IE 11 issue.\r\n    marginLeft: theme.spacing.unit * 3,\r\n    marginRight: theme.spacing.unit * 3,\r\n    [theme.breakpoints.up(400 + theme.spacing.unit * 3 * 2)]: {\r\n      width: 400,\r\n      marginLeft: 'auto',\r\n      marginRight: 'auto',\r\n    },\r\n  },\r\n  paper: {\r\n    padding: `${theme.spacing.unit * 2}px ${theme.spacing.unit * 3}px ${theme.spacing.unit * 3}px`,\r\n    position: 'absolute',\r\n    width: '350px',\r\n    top: '50px',\r\n    left: 'calc(50% + 150px - 175px)'\r\n  },\r\n  input: {\r\n  },\r\n  form: {\r\n    width: '100%',\r\n    marginTop: theme.spacing.unit,\r\n  },\r\n  submit: {\r\n    marginTop: theme.spacing.unit * 3\r\n  },\r\n  errorText: {\r\n    color: 'red',\r\n    textAlign: 'center'\r\n  }\r\n});\r\n\r\nexport default styles;","import React from 'react';\r\nimport { FormControl, InputLabel, Input, Button, Paper, withStyles, CssBaseline, Typography } from '@material-ui/core';\r\nimport styles from './styles';\r\nconst firebase = require(\"firebase\");\r\n\r\nclass NewChatComponent extends React.Component {\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      username: null,\r\n      message: null\r\n    };\r\n  }\r\n\r\n  render() {\r\n\r\n    const { classes } = this.props;\r\n\r\n    return(\r\n      <main className={classes.main}>\r\n        <CssBaseline/>\r\n        <Paper className={classes.paper}>\r\n          <Typography component=\"h1\" variant=\"h5\">Send A Message!</Typography>\r\n          <form className={classes.form} onSubmit={(e) => this.submitNewChat(e)}>\r\n            <FormControl fullWidth>\r\n              <InputLabel htmlFor='new-chat-username'>\r\n                  Enter Your Friend's Email\r\n              </InputLabel>\r\n              <Input required \r\n                className={classes.input}\r\n                autoFocus \r\n                onChange={(e) => this.userTyping('username', e)} \r\n                id='new-chat-username'>\r\n              </Input>\r\n            </FormControl>\r\n            <FormControl fullWidth>\r\n              <InputLabel htmlFor='new-chat-message'>\r\n                  Enter Your Message\r\n              </InputLabel>\r\n              <Input required \r\n                className={classes.input}\r\n                onChange={(e) => this.userTyping('message', e)} \r\n                id='new-chat-message'>\r\n              </Input>\r\n            </FormControl>\r\n            <Button fullWidth variant='contained' color='primary' className={classes.submit} type='submit'>Send</Button>\r\n          </form>\r\n          {\r\n            this.state.serverError ? \r\n            <Typography component='h5' variant='h6' className={classes.errorText}>\r\n              Unable to locate the user\r\n            </Typography> :\r\n            null\r\n          }\r\n        </Paper>\r\n      </main>\r\n    );\r\n  }\r\n\r\n  componentWillMount() {\r\n    if(!firebase.auth().currentUser)\r\n      this.props.history.push('/login');\r\n  }\r\n\r\n  userTyping = (inputType, e) => {\r\n    switch (inputType) {\r\n      case 'username':\r\n        this.setState({ username: e.target.value });\r\n        break;\r\n      \r\n      case 'message':\r\n        this.setState({ message: e.target.value });\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  submitNewChat = async (e) => {\r\n    e.preventDefault();\r\n    const userExists = await this.userExists();\r\n    if(userExists) {\r\n      const chatExists = await this.chatExists();\r\n      chatExists ? this.goToChat() : this.createChat();\r\n    }\r\n  }\r\n\r\n  buildDocKey = () => [firebase.auth().currentUser.email, this.state.username].sort().join(':');\r\n\r\n  createChat = () => {\r\n    this.props.newChatSubmitFn({\r\n      sendTo: this.state.username,\r\n      message: this.state.message\r\n    });\r\n  }\r\n\r\n  goToChat = () => this.props.goToChatFn(this.buildDocKey(), this.state.message);\r\n\r\n  chatExists = async () => {\r\n    const docKey = this.buildDocKey();\r\n    const chat = await \r\n      firebase\r\n      .firestore()\r\n      .collection('chats')\r\n      .doc(docKey)\r\n      .get();\r\n    console.log(chat.exists);\r\n    return chat.exists;\r\n  }\r\n  userExists = async () => {\r\n    const usersSnapshot = await \r\n    firebase\r\n      .firestore()\r\n      .collection('users')\r\n      .get();\r\n    const exists = usersSnapshot\r\n      .docs\r\n        .map(_doc => _doc.data().email)\r\n        .includes(this.state.username);\r\n    this.setState({ serverError: !exists });\r\n    return exists;\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(NewChatComponent);","const styles = theme => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    height: 'calc(100% - 35px)',\r\n    position: 'absolute',\r\n    left: '0',\r\n    width: '300px',\r\n    boxShadow: '0px 0px 2px black'\r\n  },\r\n  listItem: {\r\n    cursor: 'pointer'\r\n  },\r\n  newChatBtn: {\r\n    borderRadius: '0px'\r\n  },\r\n  unreadMessage: {\r\n    color: 'red',\r\n    position: 'absolute',\r\n    top: '0',\r\n    right: '5px'\r\n  }\r\n});\r\n\r\nexport default styles;","import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport styles from './styles';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Button from '@material-ui/core/Button';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport NotificationImportant from '@material-ui/icons/NotificationImportant';\r\n\r\nclass ChatListComponent extends React.Component {\r\n\r\n  render() {\r\n\r\n    const { classes } = this.props;\r\n\r\n    if(this.props.chats.length > 0) {\r\n      return(\r\n        <div className={classes.root}>\r\n            <Button variant=\"contained\" \r\n              fullWidth \r\n              color='primary' \r\n              onClick={this.newChat} \r\n              className={classes.newChatBtn}>\r\n                New Message\r\n            </Button>\r\n            <List>\r\n              {\r\n                this.props.chats.map((_chat, _index) => {\r\n                  return (\r\n                    <div key={_index}>\r\n                      <ListItem onClick={() => this.selectChat(_index)} \r\n                        className={classes.listItem} \r\n                        selected={this.props.selectedChatIndex === _index} \r\n                        alignItems=\"flex-start\">\r\n                        <ListItemAvatar>\r\n                          <Avatar alt=\"Remy Sharp\">{_chat.users.filter(_user => _user !== this.props.userEmail)[0].split('')[0]}</Avatar>\r\n                        </ListItemAvatar>\r\n                        <ListItemText \r\n                          primary={_chat.users.filter(_user => _user !== this.props.userEmail)[0]}\r\n                          secondary={\r\n                            <React.Fragment>\r\n                              <Typography component='span'\r\n                                color='textPrimary'>\r\n                                  {_chat.messages[_chat.messages.length - 1].message.substring(0, 30) + ' ...'}\r\n                              </Typography>\r\n                            </React.Fragment>\r\n                          }/>\r\n                          {\r\n                            _chat.receiverHasRead === false && !this.userIsSender(_chat) ? \r\n                            <ListItemIcon><NotificationImportant className={classes.unreadMessage}></NotificationImportant></ListItemIcon> :\r\n                            null\r\n                          }\r\n                      </ListItem>\r\n                      <Divider/>\r\n                    </div>\r\n                  )\r\n                })\r\n              }\r\n            </List>\r\n        </div>\r\n      );\r\n    } else {\r\n      return(\r\n        <div className={classes.root}>\r\n          <Button variant=\"contained\" \r\n            fullWidth \r\n            color='primary' \r\n            onClick={this.newChat} \r\n            className={classes.newChatBtn}>\r\n              New Message\r\n          </Button>\r\n          <List></List>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  userIsSender = (chat) => chat.messages[chat.messages.length - 1].sender === this.props.userEmail;\r\n  newChat = () => this.props.newChatBtnFn();\r\n  selectChat = (index) => this.props.selectChatFn(index);\r\n}\r\n\r\nexport default withStyles(styles)(ChatListComponent);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React from 'react';\r\n// import './chatList.css';\r\n\r\n// class ChatListComponent extends React.Component {\r\n//   render() {\r\n//     if(this.props.chats.length > 0) {\r\n//       return(\r\n//         <div className='chat-list-container'>\r\n//           <button onClick={this.newChat} className='add-new-chat-button'>New Message</button>\r\n//           {\r\n//             this.props.chats.map((_chat, _index) => {\r\n//               return (\r\n//                 <div onClick={() => this.selectChat(_index)} key={_index} className={`individual-chat-container ${this.props.selectedChatIndex === _index ? 'selected-chat' : ''}`}>\r\n//                   <h5>{_chat.users.filter(_user => _user !== this.props.userEmail)[0]}</h5>\r\n//                   <p>{_chat.messages[_chat.messages.length - 1].message.substring(0, 30) + ' ...'}</p>\r\n//                 </div>\r\n//               )\r\n//             })\r\n//           }\r\n//         </div>\r\n//       );\r\n//     } else {\r\n//       return(\r\n//         <div className='chat-list-container'>\r\n//           <button onClick={this.newChat} className='add-new-chat-button'>New Message</button>\r\n//         </div>\r\n//       );\r\n//     }\r\n//   }\r\n//   newChat = () => this.props.newChatBtnFn();\r\n//   selectChat = (index) => this.props.selectChatFn(index);\r\n// }\r\n\r\n// export default ChatListComponent;","const styles = theme => ({\r\n\r\n  content: {\r\n    height: 'calc(100vh - 100px)',\r\n    overflow: 'auto',\r\n    padding: '25px',\r\n    marginLeft: '300px',\r\n    boxSizing: 'border-box',\r\n    overflowY: 'scroll',\r\n    top: '50px',\r\n    width: 'calc(100% - 300px)',\r\n    position: 'absolute'\r\n  },\r\n\r\n  userSent: {\r\n    float: 'left',\r\n    clear: 'both',\r\n    padding: '20px',\r\n    boxSizing: 'border-box',\r\n    wordWrap: 'break-word',\r\n    marginTop: '10px',\r\n    backgroundColor: '#707BC4',\r\n    color: 'white',\r\n    width: '300px',\r\n    borderRadius: '10px'\r\n  },\r\n\r\n  friendSent: {\r\n    float: 'right',\r\n    clear: 'both',\r\n    padding: '20px',\r\n    boxSizing: 'border-box',\r\n    wordWrap: 'break-word',\r\n    marginTop: '10px',\r\n    backgroundColor: '#707BC4',\r\n    color: 'white',\r\n    width: '300px',\r\n    borderRadius: '10px'\r\n  },\r\n\r\n  chatHeader: {\r\n    width: 'calc(100% - 301px)',\r\n    height: '50px',\r\n    backgroundColor: '#344195',\r\n    position: 'fixed',\r\n    marginLeft: '301px',\r\n    fontSize: '18px',\r\n    textAlign: 'center',\r\n    color: 'white',\r\n    paddingTop: '10px',\r\n    boxSizing: 'border-box'\r\n  }\r\n\r\n});\r\n\r\nexport default styles;","import React from 'react';\r\nimport styles from './styles';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nclass ChatViewComponent extends React.Component {\r\n\r\n  componentDidMount = () => {\r\n    const container = document.getElementById('chatview-container');\r\n    if(container)\r\n      container.scrollTo(0, container.scrollHeight);\r\n  }\r\n  componentDidUpdate = () => {\r\n    const container = document.getElementById('chatview-container');\r\n    if(container)\r\n      container.scrollTo(0, container.scrollHeight);\r\n  }\r\n\r\n  render() {\r\n\r\n    const { classes } = this.props;\r\n\r\n    if(this.props.chat === undefined) {\r\n      return(<main className={classes.content}></main>);\r\n    } else if(this.props.chat !== undefined) {\r\n      return(\r\n        <div>\r\n          <div className={classes.chatHeader}>\r\n            Your conversation with {this.props.chat.users.filter(_usr => _usr !== this.props.user)[0]}\r\n          </div>\r\n          <main id='chatview-container' className={classes.content}>\r\n            {\r\n              this.props.chat.messages.map((_msg, _index) => {\r\n                return(\r\n                <div key={_index} className={_msg.sender === this.props.user ? classes.userSent : classes.friendSent}>\r\n                  {_msg.message}\r\n                </div>\r\n                )\r\n              })\r\n            }\r\n          </main>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (<div className='chatview-container'>Loading...</div>);\r\n    }\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(ChatViewComponent);","const styles = theme => ({\r\n\r\n  sendBtn: {\r\n    color: 'blue',\r\n    cursor: 'pointer',\r\n    '&:hover': {\r\n      color: 'gray'\r\n    }\r\n  },\r\n\r\n  chatTextBoxContainer: {\r\n    position: 'absolute',\r\n    bottom: '15px',\r\n    left: '315px',\r\n    boxSizing: 'border-box',\r\n    overflow: 'auto',\r\n    width: 'calc(100% - 300px - 50px)'\r\n  },\r\n\r\n  chatTextBox: {\r\n    width: 'calc(100% - 25px)'\r\n  }\r\n\r\n});\r\n\r\nexport default styles;","import React from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Send from '@material-ui/icons/Send';\r\nimport styles from './styles';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nclass ChatTextBoxComponent extends React.Component {\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      chatText: ''\r\n    };\r\n  }\r\n\r\n  render() {\r\n\r\n    const { classes } = this.props;\r\n\r\n    return(\r\n      <div className={classes.chatTextBoxContainer}>\r\n        <TextField\r\n          placeholder='Type your message..' \r\n          onKeyUp={(e) => this.userTyping(e)}\r\n          id='chattextbox' \r\n          className={classes.chatTextBox}\r\n          onFocus={this.userClickedInput}>\r\n        </TextField>\r\n        <Send onClick={this.submitMessage} className={classes.sendBtn}></Send>\r\n      </div>\r\n    );\r\n  }\r\n  userTyping = (e) => e.keyCode === 13 ? this.submitMessage() : this.setState({ chatText: e.target.value });\r\n  messageValid = (txt) => txt && txt.replace(/\\s/g, '').length;\r\n  userClickedInput = () => this.props.userClickedInputFn();\r\n  submitMessage = () => {\r\n    if(this.messageValid(this.state.chatText)) {\r\n      this.props.submitMessageFn(this.state.chatText);\r\n      document.getElementById('chattextbox').value = '';\r\n    }\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(ChatTextBoxComponent);","const styles = theme => ({\r\n  signOutBtn: {\r\n    position: 'absolute',\r\n    bottom: '0px',\r\n    left: '0px',\r\n    width: '300px',\r\n    borderRadius: '0px',\r\n    backgroundColor: '#227092',\r\n    height: '35px',\r\n    boxShadow: '0px 0px 2px black',\r\n    color: 'white'\r\n  }\r\n});\r\n\r\nexport default styles;","import React from 'react';\r\nimport NewChatComponent from '../NewChat/newChat';\r\nimport ChatListComponent from '../ChatList/chatList';\r\nimport ChatViewComponent from '../ChatView/chatView';\r\nimport ChatTextBoxComponent from '../ChatTextBox/chatTextBox';\r\nimport styles from './styles';\r\nimport { Button, withStyles } from '@material-ui/core';\r\nconst firebase = require(\"firebase\");\r\n\r\nclass DashboardComponent extends React.Component {\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      selectedChat: null,\r\n      newChatFormVisible: false,\r\n      email: null,\r\n      friends: [],\r\n      chats: []\r\n    };\r\n  }\r\n\r\n  render() {\r\n\r\n    const { classes } = this.props;\r\n\r\n    if(this.state.email) {\r\n      return(\r\n        <div className='dashboard-container' id='dashboard-container'>\r\n          <ChatListComponent history={this.props.history}\r\n            userEmail={this.state.email}\r\n            selectChatFn={this.selectChat}\r\n            chats={this.state.chats}\r\n            selectedChatIndex={this.state.selectedChat}\r\n            newChatBtnFn={this.newChatBtnClicked}>\r\n          </ChatListComponent>\r\n          {\r\n            this.state.newChatFormVisible ? null : <ChatViewComponent\r\n              user={this.state.email}\r\n              chat={this.state.chats[this.state.selectedChat]}>\r\n            </ChatViewComponent>\r\n          }\r\n          {\r\n            this.state.selectedChat !== null && !this.state.newChatFormVisible ? <ChatTextBoxComponent userClickedInputFn={this.messageRead} submitMessageFn={this.submitMessage}></ChatTextBoxComponent> : null\r\n          }\r\n          {\r\n            this.state.newChatFormVisible ? <NewChatComponent goToChatFn={this.goToChat} newChatSubmitFn={this.newChatSubmit}></NewChatComponent> : null\r\n          }\r\n          <Button onClick={this.signOut} className={classes.signOutBtn}>Sign Out</Button>\r\n        </div>\r\n      );\r\n    } else {\r\n      return(<div>LOADING....</div>);\r\n    }\r\n  }\r\n\r\n  signOut = () => firebase.auth().signOut();\r\n\r\n  submitMessage = (msg) => {\r\n    const docKey = this.buildDocKey(this.state.chats[this.state.selectedChat]\r\n      .users\r\n      .filter(_usr => _usr !== this.state.email)[0])\r\n    firebase\r\n      .firestore()\r\n      .collection('chats')\r\n      .doc(docKey)\r\n      .update({\r\n        messages: firebase.firestore.FieldValue.arrayUnion({\r\n          sender: this.state.email,\r\n          message: msg,\r\n          timestamp: Date.now()\r\n        }),\r\n        receiverHasRead: false\r\n      });\r\n  }\r\n\r\n  // Always in alphabetical order:\r\n  // 'user1:user2'\r\n  buildDocKey = (friend) => [this.state.email, friend].sort().join(':');\r\n\r\n  newChatBtnClicked = () => this.setState({ newChatFormVisible: true, selectedChat: null });\r\n\r\n  newChatSubmit = async (chatObj) => {\r\n    const docKey = this.buildDocKey(chatObj.sendTo);\r\n    await\r\n      firebase\r\n        .firestore()\r\n        .collection('chats')\r\n        .doc(docKey)\r\n        .set({\r\n          messages: [{\r\n            message: chatObj.message,\r\n            sender: this.state.email\r\n          }],\r\n          users: [this.state.email, chatObj.sendTo],\r\n          receiverHasRead: false\r\n        })\r\n    this.setState({ newChatFormVisible: false });\r\n    this.selectChat(this.state.chats.length - 1);\r\n  }\r\n\r\n  selectChat = async (chatIndex) => {\r\n    await this.setState({ selectedChat: chatIndex, newChatFormVisible: false });\r\n    this.messageRead();\r\n  }\r\n\r\n  goToChat = async (docKey, msg) => {\r\n    const usersInChat = docKey.split(':');\r\n    const chat = this.state.chats.find(_chat => usersInChat.every(_user => _chat.users.includes(_user)));\r\n    this.setState({ newChatFormVisible: false });\r\n    await this.selectChat(this.state.chats.indexOf(chat));\r\n    this.submitMessage(msg);\r\n  }\r\n\r\n  // Chat index could be different than the one we are currently on in the case\r\n  // that we are calling this function from within a loop such as the chatList.\r\n  // So we will set a default value and can overwrite it when necessary.\r\n  messageRead = () => {\r\n    const chatIndex = this.state.selectedChat;\r\n    const docKey = this.buildDocKey(this.state.chats[chatIndex].users.filter(_usr => _usr !== this.state.email)[0]);\r\n    if(this.clickedMessageWhereNotSender(chatIndex)) {\r\n      firebase\r\n        .firestore()\r\n        .collection('chats')\r\n        .doc(docKey)\r\n        .update({ receiverHasRead: true });\r\n    } else {\r\n      console.log('Clicked message where the user was the sender');\r\n    }\r\n  }\r\n\r\n  clickedMessageWhereNotSender = (chatIndex) => this.state.chats[chatIndex].messages[this.state.chats[chatIndex].messages.length - 1].sender !== this.state.email;\r\n\r\n  componentWillMount = () => {\r\n      firebase.auth().onAuthStateChanged(async _usr => {\r\n        if(!_usr)\r\n          this.props.history.push('/login');\r\n        else {\r\n          await firebase\r\n            .firestore()\r\n            .collection('chats')\r\n            .where('users', 'array-contains', _usr.email)\r\n            .onSnapshot(async res => {\r\n              const chats = res.docs.map(_doc => _doc.data());\r\n              await this.setState({\r\n                email: _usr.email,\r\n                chats: chats,\r\n                friends: []\r\n              });\r\n            })\r\n        }\r\n    });\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(DashboardComponent);\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Route, BrowserRouter, Redirect } from 'react-router-dom';\nimport * as serviceWorker from './serviceWorker';\nimport LoginComponent from './Login/login';\nimport SignupComponent from './Signup/signup';\nimport DashboardComponent from './Dashboard/dashboard';\n\nconst firebase = require(\"firebase\");\nrequire(\"firebase/firestore\"); // Required for side-effects?????\n\nfirebase.initializeApp({\n  apiKey: \"AIzaSyAJjC4YeETWGsgufHNVi7s0CrDBs79fS04\",\n     authDomain: \"my-chat-c8d73.firebaseapp.com\",\n     databaseURL: \"https://my-chat-c8d73.firebaseio.com\",\n     projectId: \"my-chat-c8d73\",\n     storageBucket: \"my-chat-c8d73.appspot.com\",\n     messagingSenderId: \"851310824282\",\n     appId: \"1:851310824282:web:397bea69e6e22b60470163\",\n     measurementId: \"G-23L8GRXW9J\"\n});\n\nconst routing = (\n  <BrowserRouter>\n    <div id='routing-container'>\n      <Route path='/login' component={LoginComponent}></Route>\n      <Route path='/signup' component={SignupComponent}></Route>\n      <Route path='/dashboard' component={DashboardComponent}></Route>\n      <Redirect to='/login' />\n    </div>\n  </BrowserRouter>\n);\n\nReactDOM.render(routing, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}